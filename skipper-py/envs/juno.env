# File to stream logs to
LOG_FILE = "logs/juno.log"

# Contracts file
CONTRACTS_FILE = "contracts/juno_contracts.json"

# Mnenomic to generate private key
# Replace with your own mnemonic
MNEMONIC = ""

# RPC URL to stream mempool, submit bids, and query contract state from
RPC_URL = "https://rpc-juno-ia.cosmosia.notional.ventures/"
#RPC_URL = "https://juno-rpc.reece.sh/"

# Rest URL to use to get a network client from cosmpy 
REST_URL = "https://api-juno-ia.cosmosia.notional.ventures/"

# Chain ID of network, to be used for network client
# You can find chain IDs at https://github.com/cosmos/chain-registry
CHAIN_ID = "juno-1"

# Fee asset denom to for network, to be used for network client
FEE_DENOM = "ujuno"

# Arb asset denom
ARB_DENOM = "ujuno"

# Total gas limit for transaction
# This can be optimized in the future to be dynamic
# Based on the number of messages in the transaction
GAS_LIMIT = 2000000

# Price per gast unit to calculate total fee paid for has
GAS_PRICE = 0.075

# Addrex prefix for the network, to be used to generate wallet object
ADDRESS_PREFIX = "juno"

# The percentage of the arb profit
# To be used as the bid to the Skip Auction
# Note: There will probably be an equilibrium of percentage,
# so this is a very important variable to optimize as you search
# 0.5 represents 50% of the profit, 1 represents 100% of the profit
AUCTION_BID_PROFIT_PERCENTAGE = 0.50

FACTORY_CONTRACTS = "{'wyndex': 'juno16adshp473hd9sruwztdqrtsfckgtd69glqm6sqk0hc4q40c296qsxl3u3s'}"
ROUTER_CONTRACTS = "{'wyndex': 'juno1pctfpv9k03v0ff538pz8kkw5ujlptntzkwjg6c0lrtqv87s9k28qdtl50w'}"
        
DECODER = "cosmwasm"
QUERIER = "cosmwasm"
EXECUTOR = "cw_multi_message"

# This is the reserve fee that is currently set on the POB module
AUCTION_BID_MINIMUM = 1000000